@using GratisForGratis.Models
@model OggettoViewModel

@if (!string.IsNullOrWhiteSpace(Model.Marca))
{
    <h5 class="brand"><b>@Language.Brand :</b> @Model.Marca</h5>
}
<h5 class="state"><b>@Language.StateObject :</b> @EnumHelper.GetSelectList(typeof(CondizioneOggetto), Model.StatoOggetto).Where(m => m.Selected).FirstOrDefault().Text</h5>
@if (Model.TipoScambio.Contains(TipoScambio.Spedizione))
{
    <h5 class="shipment"><b>@Language.Shipment :</b> <span class="evidence">@Model.SoldiSpedizione (@Model.NomeCorriere)</span></h5>
    <h5><b>Disponibilità per la spedizione</b></h5>
    <h5 class="giorniSpedizione">
        <b>Giorni</b>
        INSERIRE GIORNI E ORARI PER LA SPEDIZIONE....
    </h5>
    <h5 class="orariSpedizione">
        <b>orari</b>
        INSERIRE GIORNI E ORARI PER LA SPEDIZIONE....
    </h5>
    <h5 class="TempoImballaggio">
        <b>Tempo imballaggio</b>
        INSERIRE GIORNI E ORARI PER LA SPEDIZIONE....
    </h5>
}
@if (Model.Materiali.Count(m => m.Trim() != string.Empty) > 0)
{
    <ul class="materials lista">
        @Language.LblMaterials :
        @foreach (string materiale in Model.Materiali)
        {
            <li class="voce">
                @materiale
            </li>
        }
    </ul>
}
@if (Model.Componenti.Count(m => m.Trim() != string.Empty) > 0)
{
    <ul class="components lista">
        @Language.LblComponents :
        @foreach (string componente in Model.Componenti)
        {
            <li class="voce">
                @componente
            </li>
        }
    </ul>
}