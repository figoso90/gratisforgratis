@using GratisForGratis.Models
@model UtenteNotificaViewModel
@Styles.Render("~/Content/notifica.css")

<section id="news">
    <div id="@HttpUtility.UrlEncode(Model.Id.ToString())" class="news">
        <div class="detail">
            @{
                switch (Model.Tipo)
                {
                    case TipoNotifica.AttivaAnnuncio:
                        @Html.Partial("PartialPages/_Annuncio", Model.AnnuncioNotifica.Annuncio)
                        <div class="cella noMandatory">
                            @if ((Session["utente"] as PersonaModel).Persona.STATO == (int)Stato.INATTIVO)
                            {
                                @Html.ActionLink(Language.Settings, "Impostazioni", "Utente", null, new { @class = "btn" })
                            }
                            else
                            {
                                @Html.ActionLink(Language.EnableAd, "", "Annuncio", new { id = Model.AnnuncioNotifica.Annuncio.Token }, new { @class = "btn" })
                            }
                        </div>
                        break;
                    case TipoNotifica.PagaOfferta:
                        <div class="cella noMandatory">
                            @Html.ActionLink(Model.Messaggio, "", "Acquisti", null, new { @class = "btn" })
                        </div>
                        break;
                    default:
                        WriteLiteral(Html.Raw(Model.Messaggio));
                        break;
                }
            }
            <div class="cella nome">
                @ViewModel.NewsInsertDate
            </div>
            <div class="cella noMandatory">
                @Model.DataInserimento
            </div>
            <div class="cella nome">
                @ViewModel.NewsReadDate
            </div>
            <div class="cella noMandatory">
                @Model.DataLettura
            </div>
        </div>
    </div>
</section>

@section Scripts {
    @Scripts.Render("~/Scripts/notifica.js")
}