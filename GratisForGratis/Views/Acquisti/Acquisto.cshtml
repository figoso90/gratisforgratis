@using GratisForGratis.Models
@model OffertaViewModel

@{
    ViewBag.Title = Language.Purchase + " " + Model.Annuncio.Nome;
}

@Styles.Render("~/Content/acquisto.css")
<section id="purchases">
    <div id="@HttpUtility.UrlEncode(Model.Token)" class="purchase">
        <h4 class="title plus">@Html.ActionLink(Model.Annuncio.Nome, Model.Annuncio.Nome + "/" + Model.Annuncio.Token, (Model.Annuncio.TipoAcquisto == TipoAcquisto.Oggetto)?"oggetto":"servizio", null, null)</h4>
        <div class="preview">
            <div class="cella noMandatory">
                <div class="cell">
                    <img class="phote" src="@Url.Content("~/Uploads/Images/" + Model.Annuncio.Venditore.VenditoreToken + "/" + Model.Annuncio.DataInserimento.Value.Year + "/" + "Little/" + Model.Annuncio.Foto[0])" alt="@Model.Annuncio.Nome" />
                </div>
            </div>
            <div class="cella">
                @Html.Label("Categoria", Language.Category + ":")
                @Html.ActionLink(Model.Annuncio.Categoria, Model.Annuncio.Categoria + "/" + Model.Annuncio.CategoriaID, "categoria", null, null)
            </div>
            <div class="cella">
                @Html.Label("Punti", Language.Moneta + ":")
                <strong>@Model.Punti</strong>
            </div>
            <div class="cella noMandatory">
                @Html.Label("TipoPagamento", Language.TypePayment + ":")
                @Model.TipoPagamento
            </div>
            <div class="cella noMandatory">
                @Html.Label("TipoModel", Language.TypeBid + ":")
                <strong>@Model.TipoOfferta</strong>
            </div>
            <div class="cella user">
                @Html.Label("Venditore", Language.Seller + ":")
                <b>@Html.ActionLink((string.IsNullOrWhiteSpace(Model.Annuncio.Venditore.Nominativo) ? Model.Annuncio.Venditore.Email : Model.Annuncio.Venditore.Nominativo), "Profilo", (Model.Annuncio.Venditore.Tipo == GratisForGratis.Models.TipoVenditore.Attivita) ? "PortaleWeb" : "Utente", new { token = Model.Annuncio.Venditore.VenditoreToken }, null)</b>
            </div>
            <div class="cella">
                <i class="far fa-comments"></i>
                @Html.ActionLink(ViewModel.ProfileSendMessage, (Model.Annuncio.Venditore.Tipo == GratisForGratis.Models.TipoVenditore.Attivita) ? "PortaleWeb" : "Utente", "Chat", new { token = Model.Annuncio.Venditore.VenditoreToken }, new { @class = "" })
            </div>
            <div class="cella noMandatory state">
                @Html.Label("Stato", Language.StateBid + ":")
                @if (Model.Annuncio.StatoVendita == StatoVendita.VENDUTO || Model.Annuncio.StatoVendita == StatoVendita.BARATTATO)
                {
                    <strong>@Language.CompletedPurchase</strong>
                }
                else if (Model.StatoOfferta == StatoOfferta.ACCETTATA)
                {
                    if (Model.Annuncio.StatoVendita == StatoVendita.SOSPESO)
                    {
                        <div class="cella payment">
                            <a class="btn link ok" href="javascript:void(0);">Effettua pagamento</a>
                        </div>
                    }
                }
                else
                {
                    <strong>@EnumHelper.GetSelectList(typeof(StatoOfferta), Model.StatoOfferta).Where(m => m.Selected).FirstOrDefault().Text</strong>
                }
            </div>
            @if (Model.Baratti.Count > 0)
            {
                <div class="cella">
                    @Html.Label("Baratti", Language.Barters + ":")
                    <div class="barters">
                        @foreach (AnnuncioViewModel baratto in Model.Baratti)
                        {
                            @Html.ActionLink(baratto.Nome, "Barattato", (baratto.TipoAcquisto == TipoAcquisto.Servizio) ? TipoAcquisto.Servizio.ToString() : TipoAcquisto.Oggetto.ToString(), new { nome = HttpUtility.UrlEncode(baratto.Nome), token = HttpUtility.UrlEncode(baratto.Token) }, new { @class = "link" }) <br />
                        }
                    </div>
                </div>
            }
            @**if (Model.StatoOfferta == StatoOfferta.ACCETTATA)
        {
            <div class="cella contacts">
                <label>@Language.Contacts: </label>
                <p class="name">@Model.Annuncio.Venditore.Nominativo</p>
                <p class="email">@Model.Annuncio.Venditore.Email</p>
                @if (!string.IsNullOrWhiteSpace(Model.Annuncio.Venditore.Telefono))
                {
                <p class="telephone">@Model.Annuncio.Venditore.Telefono</p>
                }
            </div>
        }**@

        </div>
    </div>
</section>


@section Scripts {
    @Scripts.Render("~/Scripts/listaAcquisti.js")
}
