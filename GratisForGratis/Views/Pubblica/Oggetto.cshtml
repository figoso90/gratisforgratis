@model GratisForGratis.Models.PubblicaOggettoViewModel
@using System.Web.Configuration

@section Styles {
    @Styles.Render("~/Scripts/ColorPicker/css/colorpicker.css")
    @Styles.Render("~/Content/pubblica.css")
}

<section id="head">
    <div class="content">
        <h1 id="title">@Language.TitlePublicationObjects - @WebConfigurationManager.AppSettings["nomeSito"]</h1>
    </div>
</section>
<section id="pubblicazione">
    @using (Html.BeginForm("Oggetto", "Pubblica", FormMethod.Post, new { enctype = "multipart/form-data", @class = "form-horizontal", role = "form", id = "formPubblica" }))
    {
        @Html.AntiForgeryToken()
        @Html.HiddenFor(m => m.TokenOK)

        <h4 id="description">@Language.DescriptionPubblication</h4>
        <hr />
        @Html.ValidationMessage("Errore", new { @class = "text-danger", id = "ErroreGenerico" })
        if (Session["portaleweb"] != null)
        {
        <div class="form-group">
            @Html.LabelFor(m => m.Partner, new { @class = "col-md-2 control-label" })
            @Html.DropDownList("Partner", new SelectList(            
                (Session["portaleweb"] as List<GratisForGratis.Models.PortaleWebViewModel>).Select(p => new SelectListItem()
                {
                    Text = p.Nome,
                    Value = p.Token.ToString()
                }), "Value", "Text", Model.Partner), Language.Private, new { @class = "form-control" }
            )
            @Html.ValidationMessageFor(m => m.Partner, "", new { @class = "text-danger" })
        </div>
        }
        <div class="form-group">
            @Html.LabelFor(m => m.CategoriaId, new { @class = "col-md-2 control-label" })
            <div id="menuCategoriaPubblicazione" class="dropdown menuCategoria">
                <button class="btn dropdown-toggle categoria0" type="button" id="dropdownMenuPubblicazione" data-toggle="dropdown" aria-haspopup="true" aria-expanded="true">
                    <span class="categoriaSelezionata">@(string.IsNullOrWhiteSpace(Model.CategoriaNome)?Language.ChooseCategory:Model.CategoriaNome)</span>
                    <span class="caret"></span>
                </button>
                @{ List<GratisForGratis.Models.FINDSOTTOCATEGORIE_Result> categorie = (HttpContext.Current.Application["categorie"] as List<GratisForGratis.Models.FINDSOTTOCATEGORIE_Result>);
                    <ul id="categoriePubblicazione" class="dropdown-menu" aria-labelledby="dropdownMenuPubblicazione">
                        @foreach (GratisForGratis.Models.FINDSOTTOCATEGORIE_Result categoria in categorie.Where(c => c.TIPO_VENDITA == (int)GratisForGratis.Models.TipoAcquisto.Oggetto && c.LIVELLO == 0))
                        {
                            <li>
                                <div class="trigger" title="@(Language.Buy + ' ' + categoria.NOME)">@categoria.NOME</div>
                                @if (categoria.LIVELLO >= 0)
                                {
                                    <ul class="dropdown-menu sub-menu">
                                        @foreach (GratisForGratis.Models.FINDSOTTOCATEGORIE_Result sottoCategoria in categorie.Where(c => c.ID_PADRE == categoria.ID))
                                        {
                                            <li>
                                                @if (categorie.Count(item => item.ID_PADRE == sottoCategoria.ID) > 0)
                                                {
                                                    <div class="trigger" title="@(Language.Buy + ' ' + sottoCategoria.NOME)">@sottoCategoria.NOME</div>
                                                    <ul class="dropdown-menu sub-menu">
                                                        @foreach (GratisForGratis.Models.FINDSOTTOCATEGORIE_Result sottoCategoria2 in categorie.Where(c => c.ID_PADRE == sottoCategoria.ID))
                                                        {
                                                            <li><a class="trigger" data-value="@sottoCategoria2.ID" data-id="#CategoriaId" data-name="#menuCategoriaPubblicazione .categoriaSelezionata" title="@(Language.Buy + ' ' + sottoCategoria2.NOME)">@sottoCategoria2.NOME</a></li>
                                                        }
                                                    </ul>
                                                }
                                                else
                                                {
                                                    <a class="trigger" data-value="@sottoCategoria.ID" data-id="#CategoriaId" data-name="#menuCategoriaPubblicazione .categoriaSelezionata" title="@(Language.Buy + ' ' + sottoCategoria.NOME)">@sottoCategoria.NOME</a>
                                                }
                                            </li>
                                        }
                                    </ul>
                                }
                            </li>
                        }
                    </ul>
                }
            </div>
            @Html.HiddenFor(m => m.CategoriaId)
        </div>
        <div class="form-group">
            @Html.LabelFor(m => m.Nome, new { @class = "col-md-2 control-label" })
            @Html.TextBoxFor(m => m.Nome, new { @class = "form-control" })
            @Html.ValidationMessageFor(m => m.Nome, "", new { @class = "text-danger" })
        </div>
        <div class="form-group">
            @Html.LabelFor(m => m.TipoPagamento, new { @class = "col-md-2 control-label" })
            @Html.EnumDropDownListFor(m => m.TipoPagamento, new { @class = "form-control" })
            @Html.ValidationMessageFor(m => m.TipoPagamento, "", new { @class = "text-danger" })
        </div>
        <div class="form-group">
            @Html.LabelFor(m => m.CondizioneOggetto, new { @class = "col-md-2 control-label" })
            @Html.EnumDropDownListFor(m => m.CondizioneOggetto, new { @class = "form-control" })
            @Html.ValidationMessageFor(m => m.CondizioneOggetto, "", new { @class = "text-danger" })
        </div>
        <div class="form-group">
            <div class="field col-md-10">
                @Html.LabelFor(m => m.Punti, new { @class = "col-md-2 control-label" })
                @Html.TextBoxFor(m => m.Punti, new { @class = "form-control number" })
            </div>

            <div class="field col-md-10 quantity">
                @Html.LabelFor(m => m.Anno, new { @class = "col-md-2 control-label" })
                @Html.TextBoxFor(m => m.Anno, new { @class = "form-control number" })
            </div>
            <div class="field col-md-10">
                @Html.LabelFor(m => m.Foto, new { @class = "col-md-2 control-label" })
                @Html.TextBox("file", "", new { @class = "form-control", type = "file", data_url = "/Pubblicazione/UploadFotoOggetto", multiple = "" })
                <div id="progress">
                    <div class="bar" style="width: 0%;"></div>
                </div>
            </div>
            @Html.ValidationMessageFor(m => m.Anno, "", new { @class = "text-danger" })
            @Html.ValidationMessageFor(m => m.Punti, "", new { @class = "text-danger" })
            @Html.ValidationMessageFor(m => m.Foto, "", new { @class = "text-danger" })
        </div>
        <div id="listaFileAggiunti"></div>
        <div class="form-group">
            @Html.LabelFor(m => m.Citta, new { @class = "col-md-2 control-label" })
            @Html.TextBoxFor(m => m.Citta, new { @class = "form-control", data_autocomplete_url = "/Home/FindCitta", data_autocomplete_id = "IDCitta" })
            @Html.HiddenFor(m => m.IDCitta)
            @Html.ValidationMessageFor(m => m.IDCitta, "", new { @class = "text-danger" })
        </div>

        <div class="form-group">
            @Html.LabelFor(m => m.Marca, new { @class = "col-md-2 control-label" })
            @Html.TextBoxFor(m => m.Marca, new { @class = "form-control", data_autocomplete_url = "/Home/FindMarca", data_autocomplete_id = "MarcaID", data_autocomplete_filtro_extra = "#CategoriaMarca" })
            @Html.Hidden("CategoriaMarca", -1)
            @Html.HiddenFor(m => m.MarcaID)
            @Html.ValidationMessageFor(m => m.Marca, "", new { @class = "text-danger" })
        </div>
        <div class="form-group">
            @Html.LabelFor(m => m.NoteAggiuntive, new { @class = "col-md-2 control-label" })
            @Html.TextAreaFor(m => m.NoteAggiuntive, new { @class = "form-control" })
            @Html.ValidationMessageFor(m => m.NoteAggiuntive, "", new { @class = "text-danger" })
        </div>
        <div class="footer">
            <input id="bottonePubblica" type="submit" class="btn addOggetto" value="@Language.Public" />
        </div>
    }
</section>

@section Scripts {
    @Scripts.Render("~/Scripts/jquery-ui-1.11.4.min.js")
    @Scripts.Render("~/Scripts/ColorPicker/colorpicker.js")
    @Scripts.Render("~/Scripts/pubblica.js")
}