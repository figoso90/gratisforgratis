@using GratisForGratis.Models
@model PubblicaOggettoViewModel

    <div class="form-group col-md-12">
        <h5 class="title">INFO <span class="evidence">OPZIONALI</span> (Per ulteriori possibilità e maggiore visibilità)</h5>
        <h5 class="title @((Model.ScambioConSpedizione)?"":"hide") spedizione">@ViewModel.PublishTitleShipment</h5>
    </div>
    <div class="form-group col-md-12">
        @Html.Label("TipoScambio", ViewModel.ExchangeMode, new { @class = "control-label" })
        @Html.CheckBoxFor(m => m.ScambioAMano, new { @class = "form-control", onchange = "sceltaScambio(this);" })
        @Html.LabelFor(m => m.ScambioAMano, new { @class = "control-label" })
        @Html.CheckBoxFor(m => m.ScambioConSpedizione, new { @class = "form-control", onchange = "sceltaScambio(this, true);" })
        @Html.LabelFor(m => m.ScambioConSpedizione, new { @class = "control-label" })
        <p>@Html.Raw(ViewModel.PublishAdInfoShipment)</p>
        @Html.ValidationMessageFor(m => m.ScambioAMano, "", new { @class = "text-danger" })
        @Html.ValidationMessageFor(m => m.ScambioConSpedizione, "", new { @class = "text-danger" })
    </div>

    <!-- campi spedizione -->
    <div class="form-group col-md-2 @((Model.ScambioConSpedizione)?"":"hide") spedizione">
        @Html.LabelFor(m => m.TipoSpedizione, new { @class = "control-label" })
        @Html.DropDownListFor(m => m.TipoSpedizione, Model.ListaTipoSpedizione, new { @class = "form-control", onchange = "sceltaSpedizione(this);" })
        @Html.ValidationMessageFor(m => m.TipoSpedizione, "", new { @class = "text-danger" })
    </div>
    <div class="form-group col-md-2 @((Model.ScambioConSpedizione)?"":"hide") spedizione">
        @Html.LabelFor(m => m.TempoImballaggio, new { @class = "control-label" })
        @Html.DropDownListFor(m => m.TempoImballaggio, Model.ListaTempoImballaggio, new { @class = "form-control" })
        @Html.ValidationMessageFor(m => m.TempoImballaggio, "", new { @class = "text-danger" })
    </div>
    <div class="form-group col-md-1 @((Model.ScambioConSpedizione && Model.TipoSpedizione==(int)Spedizione.Online)?"":"hide") spedizione spedizioneOnline">
        @Html.LabelFor(m => m.Altezza, new { @class = "control-label" })
        @Html.TextBoxFor(m => m.Altezza, new { @class = "form-control" })
        @Html.ValidationMessageFor(m => m.Altezza, "", new { @class = "text-danger" })
    </div>
    <div class="form-group col-md-1 @((Model.ScambioConSpedizione && Model.TipoSpedizione==(int)Spedizione.Online)?"":"hide") spedizione spedizioneOnline">
        @Html.LabelFor(m => m.Lunghezza, new { @class = "control-label" })
        @Html.TextBoxFor(m => m.Lunghezza, new { @class = "form-control" })
        @Html.ValidationMessageFor(m => m.Lunghezza, "", new { @class = "text-danger" })
    </div>
    <div class="form-group col-md-1 @((Model.ScambioConSpedizione && Model.TipoSpedizione==(int)Spedizione.Online)?"":"hide") spedizione spedizioneOnline">
        @Html.LabelFor(m => m.Larghezza, new { @class = "control-label" })
        @Html.TextBoxFor(m => m.Larghezza, new { @class = "form-control" })
        @Html.ValidationMessageFor(m => m.Larghezza, "", new { @class = "text-danger" })
    </div>
    <div class="form-group col-md-1 @((Model.ScambioConSpedizione && Model.TipoSpedizione==(int)Spedizione.Online)?"":"hide") spedizione spedizioneOnline">
        @Html.LabelFor(m => m.Peso, new { @class = "control-label" })
        @Html.TextBoxFor(m => m.Peso, new { @class = "form-control" })
        @Html.ValidationMessageFor(m => m.Peso, "", new { @class = "text-danger" })
    </div>
    <div class="form-group col-md-3 @((Model.ScambioConSpedizione)?"":"hide") spedizione corrieri">
        @Html.LabelFor(m => m.ServizioSpedizioneScelto, new { @class = "control-label" })
        @Html.DropDownListFor(m => m.ServizioSpedizioneScelto, Model.ServiziSpedizione, new { @class = "form-control", onchange = "getPrezzoSpedizione(this)" })
        @Html.ValidationMessageFor(m => m.ServizioSpedizioneScelto, "", new { @class = "text-danger" })
    </div>
    <div class="form-group col-md-2 col-sm-1 col-xs-2 @((Model.ScambioConSpedizione)?"":"hide") spedizione prezzoSpedizione">
        @Html.LabelFor(m => m.PrezzoSpedizione, new { @class = "control-label" })
        <div class="input-group">
            <div class="input-group-prepend" style="margin-right:7px;">
                <i class="fas fa-euro-sign icona"></i>
            </div>
            @Html.TextBoxFor(m => m.PrezzoSpedizione, new { @class = "form-control number" })
            <div class="input-group-append" style="margin-left:7px;">
                <a onclick="getPrezzoSpedizione($('#ServizioSpedizioneScelto'))">
                    <i class="far fa-money-bill-alt icona"></i>
                </a>
            </div>
        </div>
        @Html.ValidationMessageFor(m => m.PrezzoSpedizione, "", new { @class = "text-danger" })
    </div>
    <div class="form-group col-md-3 @((Model.ScambioConSpedizione && Model.TipoSpedizione==(int)Spedizione.Online)?"":"hide") spedizione spedizioneOnline">
        @Html.LabelFor(m => m.GiorniSpedizioneScelti, new { @class = "control-label" })
        @Html.ListBoxFor(m => m.GiorniSpedizioneScelti, Model.GiorniSpedizione, new { @class = "form-control", multiple = "" })
        @Html.ValidationMessageFor(m => m.GiorniSpedizioneScelti, "", new { @class = "text-danger" })
    </div>
    <div class="form-group col-md-3 @((Model.ScambioConSpedizione && Model.TipoSpedizione==(int)Spedizione.Online)?"":"hide") spedizione spedizioneOnline">
        @Html.LabelFor(m => m.OrariSpedizioneScelti, new { @class = "control-label" })
        @Html.ListBoxFor(m => m.OrariSpedizioneScelti, Model.OrariSpedizione, new { @class = "form-control", multiple = "" })
        @Html.ValidationMessageFor(m => m.OrariSpedizioneScelti, "", new { @class = "text-danger" })
    </div>
    <div class="form-group col-md-12">
        <h5 class="title @((Model.ScambioConSpedizione)?"":"hide") spedizione">@ViewModel.DepartureInfo</h5>
    </div>
    <div class="form-group col-md-3 departureInfo @((Model.ScambioConSpedizione)?"":"hide") spedizione">
        @Html.LabelFor(m => m.NominativoMittente, new { @class = "control-label" })
        @Html.TextBoxFor(m => m.NominativoMittente, new { @class = "form-control" })
        @Html.ValidationMessageFor(m => m.NominativoMittente, "", new { @class = "text-danger" })
    </div>
    <div class="form-group col-md-3 departureInfo @((Model.ScambioConSpedizione)?"":"hide") spedizione">
        @Html.LabelFor(m => m.TelefonoMittente, new { @class = "control-label" })
        @Html.TextBoxFor(m => m.TelefonoMittente, new { @class = "form-control" })
        @Html.ValidationMessageFor(m => m.TelefonoMittente, "", new { @class = "text-danger" })
    </div>
    <div class="form-group col-md-3 departureInfo @((Model.ScambioConSpedizione)?"":"hide") spedizione">
        @Html.LabelFor(m => m.CittaMittente, new { @class = "control-label" })
        @Html.TextBoxFor(m => m.CittaMittente, new { @class = "form-control", data_autocomplete_url = "/Home/FindCitta", data_autocomplete_id = "IDCittaMittente" })
        @Html.HiddenFor(m => m.IDCittaMittente)
        @Html.ValidationMessageFor(m => m.CittaMittente, "", new { @class = "text-danger" })
    </div>
    <div class="form-group col-md-3 departureInfo @((Model.ScambioConSpedizione)?"":"hide") spedizione">
        @Html.LabelFor(m => m.IndirizzoMittente, new { @class = "control-label" })
        @Html.TextBoxFor(m => m.IndirizzoMittente, new { @class = "form-control" })
        @Html.ValidationMessageFor(m => m.IndirizzoMittente, "", new { @class = "text-danger" })
    </div>
    <div class="form-group col-md-3 departureInfo @((Model.ScambioConSpedizione)?"":"hide") spedizione">
        @Html.LabelFor(m => m.CivicoMittente, new { @class = "control-label" })
        @Html.TextBoxFor(m => m.CivicoMittente, new { @class = "form-control" })
        @Html.ValidationMessageFor(m => m.CivicoMittente, "", new { @class = "text-danger" })
    </div>
    <div class="form-group col-md-12">
        <h5 class="title">ALTRE INFO <span class="evidence">OPZIONALI</span></h5>
    </div>
    <div class="form-group col-md-3">
        @Html.LabelFor(m => m.NoteAggiuntive, new { @class = "control-label" })
        @Html.TextAreaFor(m => m.NoteAggiuntive, new { @class = "form-control" })
        @Html.ValidationMessageFor(m => m.NoteAggiuntive, "", new { @class = "text-danger" })
    </div>

    <div class="form-group col-md-3">
        @Html.LabelFor(m => m.CondizioneOggetto, new { @class = "control-label" })
        @Html.EnumDropDownListFor(m => m.CondizioneOggetto, new { @class = "form-control" })
        @Html.ValidationMessageFor(m => m.CondizioneOggetto, "", new { @class = "text-danger" })
    </div>

    <div class="form-group col-md-3">
        @Html.LabelFor(m => m.Marca, new { @class = "control-label" })
        @Html.TextBoxFor(m => m.Marca, new { @class = "form-control", data_autocomplete_url = "/Home/FindMarca", data_autocomplete_id = "MarcaID", data_autocomplete_filtro_extra = "#CategoriaMarca" })
        @Html.Hidden("CategoriaMarca", -1)
        @Html.HiddenFor(m => m.MarcaID)
        @Html.ValidationMessageFor(m => m.Marca, "", new { @class = "text-danger" })
    </div>

    <div class="form-group col-md-3">
        <div class="field col-md-10 quantity">
            @Html.LabelFor(m => m.Anno, new { @class = "control-label" })
            @Html.TextBoxFor(m => m.Anno, new { @class = "form-control number" })
        </div>
        <div class="field col-md-10 quantity">
            @Html.LabelFor(m => m.Quantità, new { @class = "control-label" })
            @Html.TextBoxFor(m => m.Quantità, new { @class = "form-control number" })
        </div>
        @Html.ValidationMessageFor(m => m.Quantità, "", new { @class = "text-danger" })
        @Html.ValidationMessageFor(m => m.Anno, "", new { @class = "text-danger" })
    </div>

    <div class="form-group col-md-3">
        <label class="control-label" for="Materiali">
            @Language.LblMaterials
        </label>
        <div class="field materials">
            @for (int i = 0; i < Model.Materiali.Count; i++)
            {
                <div class="row">
                    <div class="input-group">
                        @Html.TextBoxFor(m => m.Materiali[i], new { @class = "form-control col-md-10 col-sm-11" })
                        <div class="input-group-append">
                            @if (i > 0)
                            {
                                <a class="remove" href="javascript:void(0);" onclick="removeMateriale(this);">
                                    <i class="fas fa-minus-circle icona"></i>
                                </a>
                            }
                            else
                            {
                                <a class="add" href="javascript:void(0);" onclick="addMateriale(this);">
                                    <i class="fas fa-plus-circle icona" style="color:green;"></i>
                                </a>
                            }
                        </div>
                    </div>
                </div>
            }
        </div>
        @Html.ValidationMessageFor(m => m.Materiali, "", new { @class = "text-danger" })
    </div>

    <div class="form-group col-md-3">
        <label class="control-label" for="Componenti">
            @Language.LblComponents
        </label>
        <div class="field components">
            @for (int i = 0; i < Model.Componenti.Count; i++)
            {
                <div class="row">
                    <div class="input-group">
                        @Html.TextBoxFor(m => m.Componenti[i], new { @class = "form-control col-md-10 col-sm-11" })
                        <div class="input-group-append">
                            @if (i > 0)
                            {
                                <a class="remove" href="javascript:void(0);" onclick="removeComponente(this);">
                                    <i class="fas fa-minus-circle icona"></i>
                                </a>
                            }
                            else
                            {
                                <a class="add" href="javascript:void(0);" onclick="addComponente(this);">
                                    <i class="fas fa-plus-circle icona" style="color:green;"></i>
                                </a>
                            }
                        </div>
                    </div>
                </div>
            }
        </div>
        @Html.ValidationMessageFor(m => m.Materiali, "", new { @class = "text-danger" })
    </div>

    @if (ViewData["ActionTipologia"] != null)
    {
        // serve in caso di categoria senza dettagli aggiuntivi (Es. Servizi)
        @Html.Hidden("ActionCategoria", ViewData["ActionTipologia"])
    }
