@using System.Web.Configuration
@using GratisForGratis.Models
<!DOCTYPE html>
<html>
<head>
    <meta http-equiv="Content-Type" content="text/html; charset=utf-8" />
    <meta charset="utf-8" />
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <meta http-equiv="X-UA-Compatible" content="IE=edge,chrome=1" />
    <meta name="author" content="Gratis Onlus" />
    <meta name="robots" content="@( (ViewBag.Robots == null) ? "INDEX,FOLLOW" : ViewBag.Robots )" />
    @RenderSection("MetaTags", false)
    <!-- BING -->
    <meta name="msvalidate.01" content="226F39118B8B7D348C07F1D8FEC695BD" />
    <title>@((@ViewBag.Title != null) ? ViewBag.Title : MetaTag.TitleGeneric) - @WebConfigurationManager.AppSettings["nomeSito"]</title>


    @Styles.Render("~/Content/JqueryUI/jquery-ui.min.css")
    @Styles.Render("~/Scripts/Uploadify/uploadifive.css")
    @Styles.Render("~/Scripts/loader/jquery.loader.min.css")
    @Styles.Render("~/Scripts/SlickNav/slicknav.css")
    @Styles.Render("~/Content/css")
    @RenderSection("styles", required: false)
    @Scripts.Render("~/bundles/modernizr")
</head>
<body>
    <script>

        window.fbAsyncInit = function () {
            FB.init({
                appId: '294838660866806',
                xfbml: true,
                cookie: true,  // enable cookies to allow the server to access
                version: 'v2.5'
            });
        };

        (function (d, s, id) {
            var js, fjs = d.getElementsByTagName(s)[0];
            if (d.getElementById(id)) { return; }
            js = d.createElement(s); js.id = id;
            js.src = "//connect.facebook.net/it_IT/sdk.js";
            fjs.parentNode.insertBefore(js, fjs);
        }(document, 'script', 'facebook-jssdk'));

    </script>
    <div id="window">
        <div id="messaggioPerUtente">

            @if ((Session["utente"] as PersonaModel).Persona.STATO == (int)Stato.INATTIVO)
            {
                <div class="testo">
                    @Html.Raw(string.Format(MessageForUser.MessaggioCompletaRegistrazione, Html.ActionLink(Language.Settings, "Impostazioni", "Utente")))
                </div>
            }

            @if ((Session["utente"] as PersonaModel).Email.Where(e => e.TIPO == (int)TipoEmail.Registrazione && e.STATO == (int)Stato.INATTIVO).Count() > 0)
            {
                <div class="testo">
                    @Html.Raw(MessageForUser.MessaggioConfermaEmail)
                    <a class="btn btnReinvio" href="javascript:void(0);" onclick="reinvioEmailRegistrazione();">@Language.BtnResubmission</a>
                </div>
            }

            @if (ViewBag.Message != null)
            {
                <div class="testo">
                    ViewBag.Message
                </div>
            }
        </div>
        <div id="menuMobileOverlay"></div>
        <div id="menuMobile">
            <img class="icona" src="~/Images/icone/menu.svg" alt="Menu" />
            <ul class="menu">
                <li role="presentation" class="reporting">
                    <a id="reportingMobile" href="javascript:void(0);">@Language.Reporting</a>
                </li>
                <li role="presentation" class="pubblication">
                    @Html.ActionLink(Language.Public, "", "Pubblica")
                </li>
                <li role="presentation" class="dropdown vendite">
                    <a class="dropdown-toggle" data-toggle="dropdown" href="#" role="button" aria-haspopup="true" aria-expanded="false">@Language.MenuSells <span class="caret"></span></a>
                    <ul class="dropdown-menu">
                        <li>
                            @Html.ActionLink(Language.MenuSellsCurrent, "", "Vendite")
                        </li>
                        <li>
                            @Html.ActionLink(Language.MenuSellsBid, "OfferteRicevute", "Vendite")
                        </li>
                        <li>
                            @Html.ActionLink(Language.MenuSellsCompleted, "Concluse", "Vendite")
                        </li>
                    </ul>
                </li>
                <li role="presentation" class="dropdown acquisti">
                    <a class="dropdown-toggle" data-toggle="dropdown" href="#" role="button" aria-haspopup="true" aria-expanded="false">@Language.MenuPurchases <span class="caret"></span></a>
                    <ul class="dropdown-menu">
                        <li>
                            @Html.ActionLink(Language.MenuPurchasesCurrent, "", "Acquisti")
                        </li>
                        <li>
                            @Html.ActionLink(MenuResource.RefusedBid, "OfferteRifiutate", "Acquisti")
                        </li>
                        <li>
                            @Html.ActionLink(Language.MenuPurchasesCompleted, "Conclusi", "Acquisti")
                        </li>
                        <li>
                            @Html.ActionLink(Language.MenuRecapsWish, "Vorrei", "Acquisti")
                        </li>
                        <li>
                            @Html.ActionLink(Language.MenuPurchasesRecommend, "Suggeriti", "Acquisti")
                        </li>
                        <li>
                            @Html.ActionLink(Language.MenuRecapsSearch, "RicercheSalvate", "Utente")
                        </li>
                    </ul>
                </li>
                @if (Session["portaleweb"] != null && (Session["portaleweb"] as List<PortaleWebViewModel>).Count > 0)
                {
                    <li role="presentation" class="dropdown partner">
                        <a class="dropdown-toggle" data-toggle="dropdown" href="#" role="button" aria-haspopup="true" aria-expanded="false">@Language.Partners <span class="caret"></span></a>
                        <ul class="dropdown-menu">
                            <li>@Html.ActionLink("Home", "Index", "PortaleWeb")</li>
                            @foreach (PortaleWebViewModel portaleweb in (Session["portaleweb"] as List<PortaleWebViewModel>))
                            {
                                <li>
                                    @Html.ActionLink(portaleweb.Nome, "Profilo", "PortaleWeb", new { token = portaleweb.Token }, null)
                                </li>
                                if ((Session["utente"] as PersonaModel).Persona.ABBONAMENTO.DURATA == -1)
                                {
                                    <li>@Html.ActionLink("Spedizioni in attesa", "SpedizioniInAttesa", "PortaleWeb")</li>
                                    <li>@Html.ActionLink("Spedizioni concluse", "SpedizioniConcluse", "PortaleWeb")</li>
                                }
                            }
                        </ul>
                    </li>
                }
                <li role="presentation" class="dropdown utente">
                    <a class="dropdown-toggle" data-toggle="dropdown" href="#" role="button" aria-haspopup="true" aria-expanded="false">@Language.User <span class="caret"></span></a>
                    <ul class="dropdown-menu">
                        <li>
                            @Html.ActionLink(Language.TitleIndex, "Index", "Utente")
                        </li>
                        <li>
                            @Html.ActionLink(Language.UserPoints, "SaldoPunti", "Utente")
                        </li>
                        <li>
                            @Html.ActionLink(ViewModel.LayoutChat, "", "Chat")
                        </li>
                        <li>
                            @Html.ActionLink(Language.MenuUserNews, "Elenco", "Notifica")
                        </li>
                        <li>
                            @Html.ActionLink(Language.Settings, "Impostazioni", "Utente")
                        </li>
                        <li>
                            @Html.ActionLink(Language.ChangePassword, "CambioPassword", "Utente")
                        </li>
                        <li>
                            @Html.ActionLink(Language.Logout, "Logout", "Utente")
                        </li>
                    </ul>
                </li>
            </ul>
        </div>
        <ul id="linkLogin">
            <li id="cart" class="dropdown profilo">
                <a class="dropdown-toggle" data-toggle="dropdown" href="#" role="button" aria-haspopup="true" aria-expanded="false">
                    @(Language.Welcome + " " + ((PersonaModel)Session["utente"]).NomeVisibile) -
                    <span id="userPoints">@( (Session["utente"] as PersonaModel).ContoCorrente.Count(m => m.STATO == (int)StatoMoneta.ASSEGNATA) + " " + @Language.Points) </span>
                    <img class="ico" src="@Url.Content("~/Images/icone/cart.svg")" alt="@Resources.Language.Cart" title="@Resources.Language.Cart" />
                    <div class="preview"></div>
                </a>
            </li>
        </ul>
        <header>
            <a id="logo" class="brand" href='@Url.Action("Index", "Home")'>
                <img class="ico" src='@Url.Content("~/Images/logo.jpg")' alt="@WebConfigurationManager.AppSettings["nomeSito"]" />
                <h1 class="slogan">@Html.Raw(@Language.Slogan)</h1>
            </a>
            <menu>
                <ul class="nav-pills">
                    <li role="presentation" class="reporting">
                        <a id="reporting" href="javascript:void(0);">@Language.Reporting</a>
                    </li>
                    <li role="presentation" class="pubblication">
                        @Html.ActionLink(Language.Public, "", "Pubblica")
                    </li>
                    <li role="presentation" class="dropdown vendite">
                        <a class="dropdown-toggle" data-toggle="dropdown" href="#" role="button" aria-haspopup="true" aria-expanded="false">@Language.MenuSells <span class="caret"></span></a>
                        <ul class="dropdown-menu">
                            <li>
                                @Html.ActionLink(Language.MenuSellsCurrent, "", "Vendite")
                            </li>
                            <li>
                                @Html.ActionLink(Language.MenuSellsBid, "OfferteRicevute", "Vendite")
                            </li>
                            <li>
                                @Html.ActionLink(Language.MenuSellsCompleted, "Concluse", "Vendite")
                            </li>
                        </ul>
                    </li>
                    <li role="presentation" class="dropdown acquisti">
                        <a class="dropdown-toggle" data-toggle="dropdown" href="#" role="button" aria-haspopup="true" aria-expanded="false">@Language.MenuPurchases <span class="caret"></span></a>
                        <ul class="dropdown-menu">
                            <li>
                                @Html.ActionLink(Language.MenuPurchasesCurrent, "", "Acquisti")
                            </li>
                            <li>
                                @Html.ActionLink(MenuResource.RefusedBid, "OfferteRifiutate", "Acquisti")
                            </li>
                            <li>
                                @Html.ActionLink(Language.MenuPurchasesCompleted, "Conclusi", "Acquisti")
                            </li>
                            <li>
                                @Html.ActionLink(Language.MenuRecapsWish, "Vorrei", "Acquisti")
                            </li>
                            <li>
                                @Html.ActionLink(Language.MenuPurchasesRecommend, "Suggeriti", "Acquisti")
                            </li>
                            <li>
                                @Html.ActionLink(Language.MenuRecapsSearch, "RicercheSalvate", "Utente")
                            </li>
                        </ul>
                    </li>
                    @if (Session["portaleweb"] != null && (Session["portaleweb"] as List<PortaleWebViewModel>).Count > 0)
                    {
                        <li role="presentation" class="dropdown partner">
                            <a class="dropdown-toggle" data-toggle="dropdown" href="#" role="button" aria-haspopup="true" aria-expanded="false">@Language.Partners <span class="caret"></span></a>
                            <ul class="dropdown-menu">
                                <li>@Html.ActionLink("Home", "Index", "PortaleWeb")</li>
                                @foreach (PortaleWebViewModel portaleweb in (Session["portaleweb"] as List<PortaleWebViewModel>))
                                {
                                    <li>
                                        @Html.ActionLink(portaleweb.Nome, "Profilo", "PortaleWeb", new { token = portaleweb.Token }, null)
                                    </li>
                                    if ((Session["utente"] as PersonaModel).Persona.ABBONAMENTO.DURATA == -1)
                                    {
                                        <li>@Html.ActionLink("Spedizioni in attesa", "SpedizioniInAttesa", "PortaleWeb")</li>
                                        <li>@Html.ActionLink("Spedizioni concluse", "SpedizioniConcluse", "PortaleWeb")</li>
                                    }
                                }
                            </ul>
                        </li>
                    }
                    <li role="presentation" class="dropdown utente">
                        <a class="dropdown-toggle" data-toggle="dropdown" href="#" role="button" aria-haspopup="true" aria-expanded="false">@Language.User <span class="caret"></span></a>
                        <ul class="dropdown-menu">
                            <li>
                                @Html.ActionLink(Language.TitleIndex, "Index", "Utente")
                            </li>
                            <li>
                                @Html.ActionLink(Language.UserPoints, "SaldoPunti", "Utente")
                            </li>
                            <li>
                                @Html.ActionLink(ViewModel.LayoutChat, "", "Chat")
                            </li>
                            <li>
                                @Html.ActionLink(Language.MenuUserNews, "Elenco", "Notifica")
                            </li>
                            <li>
                                @Html.ActionLink(Language.Settings, "Impostazioni", "Utente")
                            </li>
                            <li>
                                @Html.ActionLink(Language.ChangePassword, "CambioPassword", "Utente")
                            </li>
                            <li>
                                @Html.ActionLink(Language.Logout, "Logout", "Utente")
                            </li>
                        </ul>
                    </li>
                </ul>
                <div id="toolbar">
                    @using (Html.BeginForm("", "Cerca", FormMethod.Get, new { id = "cerca" }))
                    {
                        <div id="menuCategoriaRicerca" style="display: inline-block;margin-top: 12px;position: relative;vertical-align: top;">
                            @Html.Hidden("Cerca_IDCategoria", Response.Cookies["ricerca"]["IDCategoria"])
                            @Html.Hidden("Cerca_Categoria", Response.Cookies["ricerca"]["Categoria"])
                            @Html.TextBox("Cerca_Nome", Response.Cookies["ricerca"]["Nome"], new { @class = "form-control", placeholder = Language.InputSearch })
                            <input class="btn-search" type="submit" value="search" data-toggle="tooltip" data-placement="top" title="@Language.SearchSubmit" />
                            <img class="infoTooltip" src="~/Images/icone/infoTooltip.svg" alt="info" title="@Tooltip.InfoHowSearch" />
                            <!--<input name="Cerca_Submit" class="btnSearchSave" type="submit" value="save" data-toggle="tooltip" data-placement="top" title="@Language.SearchSave" />-->
                        </div>
                    }
                </div>
                <div id="subCategoryObjects" class="subCategory">
                    @if ((HttpContext.Current.Application["categorie"] as List<FINDSOTTOCATEGORIE_Result>).Where(c => c.ID_PADRE == Convert.ToInt32(Response.Cookies["ricerca"]["IDCategoria"])).ToList().Count > 0)
                    {
                        foreach (FINDSOTTOCATEGORIE_Result sottoCategoria in (HttpContext.Current.Application["categorie"] as List<FINDSOTTOCATEGORIE_Result>).Where(c => c.ID_PADRE == Convert.ToInt32(Response.Cookies["ricerca"]["IDCategoria"])))
                        {
                            if (sottoCategoria.LIVELLO == 0)
                            {
                                @Html.ActionLink(sottoCategoria.NOME, sottoCategoria.DESCRIZIONE, (sottoCategoria.TIPO_VENDITA == 0) ? "Oggetti" : "Servizi", new { categoria = sottoCategoria.ID }, new { @class = "link" })
                            }
                            else
                            {
                                @Html.ActionLink(sottoCategoria.NOME, Response.Cookies["ricerca"]["Categoria"] + "/" + sottoCategoria.DESCRIZIONE, (sottoCategoria.TIPO_VENDITA == 0) ? "Oggetti" : "Servizi", new { categoria = sottoCategoria.ID }, new { @class = "link" })
                            }
                        }
                    }
                    else
                    {
                        foreach (FINDSOTTOCATEGORIE_Result sottoCategoria in (HttpContext.Current.Application["categorie"] as List<FINDSOTTOCATEGORIE_Result>).Where(c => c.ID_PADRE == Convert.ToInt32(Response.Cookies["ricerca"]["IDCategoriaPadre"])))
                        {
                            if (sottoCategoria.LIVELLO == 0)
                            {
                                @Html.ActionLink(sottoCategoria.NOME, sottoCategoria.DESCRIZIONE, (sottoCategoria.TIPO_VENDITA == 0) ? "Oggetti" : "Servizi", new { categoria = sottoCategoria.ID }, new { @class = "link" })
                            }
                            else
                            {
                                @Html.ActionLink(sottoCategoria.NOME, Response.Cookies["ricerca"]["CategoriaPadre"] + "/" + sottoCategoria.DESCRIZIONE, (sottoCategoria.TIPO_VENDITA == 0) ? "Oggetti" : "Servizi", new { categoria = sottoCategoria.ID }, new { @class = "link" })
                            }
                        }
                    }
                </div>
                <!--<div id="advertising" role="banner" class="banner">
                    @if (TempData["advertising"] != null)
                    {
                        @Html.Raw(WebUtility.HtmlDecode(TempData["advertising"].ToString()))
                    }
                </div>
                <div class="fb-like"
                     data-share="true"
                     data-width="260"
                     data-show-faces="false">
                </div>-->
            </menu>
            <!--<img id="betatesting" src='@Url.Content("~/Images/beta_testing.png")' alt="@WebConfigurationManager.AppSettings["nomeSito"] Beta" />-->
        </header>

        @RenderBody()
        <section id="topServices">
            <div class="content">

            </div>
        </section>
    </div>
    <footer>
        <nav>
            <ul id="footermenu">
                <li role="presentation" class="whatido">
                    @Html.ActionLink(Language.TitleHowWork, "ComeFunziona", "Home")
                </li>
                <li role="presentation" class="partners">
                    @Html.ActionLink(Language.OurPartners, "Partners", "Home")
                </li>
                <li role="presentation" class="siteweb">
                    @Html.ActionLink(Language.Siteweb, "SitiUtili", "Home")
                </li>
                <li role="presentation" class="privacy">
                    @Html.ActionLink(Language.PagePrivacy, "Privacy", "Home")
                </li>
                <li role="presentation" class="contacts">
                    @Html.ActionLink(Language.Contacts, "Contatti", "Home")
                </li>
            </ul>
        </nav>
        <div class="content">
            <h4>@WebConfigurationManager.AppSettings["nomeSito"] &copy; @DateTime.Now.Year</h4>
            <h5>@Language.Footer</h5>
            <h6><a href="http://www.davidemilitano.net/SviluppatoreDotNet" title="WebMaster C#" target="_blank">WebMaster C# - Davide Militano</a></h6>
        </div>
    </footer>

    <!-- START POPUP -->
    <form id="boxSegnalazione" class="popup">
        @Html.AntiForgeryToken()
        <input name="Controller" type="hidden" value="@ViewContext.RouteData.Values["controller"]" />
        <input name="Vista" type="hidden" value="@ViewContext.RouteData.Values["action"]" />
        <select name="Tipologia">
            <option value="0">@Language.Bug</option>
            <option value="1">@Language.Improvement</option>
        </select>
        <input type="email" name="EmailRisposta" placeholder="@Language.AnswerEmail" value="@((Session["utente"] as PersonaModel).Email.FirstOrDefault(m => m.TIPO == (int)TipoEmail.Registrazione).EMAIL)" />
        <input type="text" name="Oggetto" placeholder="@Language.Object" />
        <textarea name="Testo" placeholder="@Language.Text"></textarea>
        <input id="AllegatoSegnalazione" type="file" name="Allegato" placeholder="@Language.Attachment" />
        <a class="button btn" href="javascript:void(0);">@Language.Send</a>
    </form>
    <div id="boxPossiedo" class="popup">
    </div>
    <!-- END POPUP -->
    <!-- HIDDEN ELEMENT -->
    <div id="menuCategorie" style="display:none;">
        <input id="categoriaAttuale" name="categoriaAttuale" value="@Response.Cookies["ricerca"]["Categoria"]" type="text" />
        @{ List<FINDSOTTOCATEGORIE_Result> categorie = (HttpContext.Current.Application["categorie"] as List<FINDSOTTOCATEGORIE_Result>);
            <ul id="menu">
                @foreach (FINDSOTTOCATEGORIE_Result categoria in categorie.Where(c => c.LIVELLO <= 0))
                {
                    <li>
                        <a class="trigger" data-value="@categoria.ID" data-text="@categoria.NOME" data-id="#Cerca_IDCategoria" data-name="#Cerca_Categoria" title="@(Language.Buy + ' ' + categoria.NOME)">
                            @categoria.NOME
                        </a>
                        @if (categoria.LIVELLO >= 0)
                        {
                            <ul>
                                @foreach (FINDSOTTOCATEGORIE_Result sottoCategoria in categorie.Where(c => c.ID_PADRE == categoria.ID))
                                {
                                    <li>
                                        @if (categorie.Count(item => item.ID_PADRE == sottoCategoria.ID) > 0)
                                        {
                                            <a class="trigger" data-value="@sottoCategoria.ID" data-text="@sottoCategoria.NOME" data-id="#Cerca_IDCategoria" data-name="#Cerca_Categoria" title="@(Language.Buy + ' ' + sottoCategoria.NOME)">
                                                @sottoCategoria.NOME
                                            </a>
                                            <ul>
                                                @foreach (FINDSOTTOCATEGORIE_Result sottoCategoria2 in categorie.Where(c => c.ID_PADRE == sottoCategoria.ID))
                                                {
                                                    <li><a class="trigger" data-value="@sottoCategoria2.ID" data-text="@sottoCategoria2.NOME" data-id="#Cerca_IDCategoria" data-name="#Cerca_Categoria" data-pubblica="true" title="@(Language.Buy + ' ' + sottoCategoria2.NOME)">@sottoCategoria2.NOME</a></li>
                                                }
                                            </ul>
                                        }
                                        else
                                        {
                                            <a class="trigger" data-value="@sottoCategoria.ID" data-text="@sottoCategoria.NOME" data-id="#Cerca_IDCategoria" data-name="#Cerca_Categoria" data-pubblica="true" title="@(Language.Buy + ' ' + sottoCategoria.NOME)">
                                                @sottoCategoria.NOME
                                            </a>
                                        }
                                    </li>
                                }
                            </ul>
                        }
                    </li>
                }
            </ul>
        }
    </div>

    @if (!this.Context.IsDebuggingEnabled)
    {
        <script>
            (function (i, s, o, g, r, a, m) {
            i['GoogleAnalyticsObject'] = r; i[r] = i[r] || function () {
                (i[r].q = i[r].q || []).push(arguments)
            }, i[r].l = 1 * new Date(); a = s.createElement(o),
                m = s.getElementsByTagName(o)[0]; a.async = 1; a.src = g; m.parentNode.insertBefore(a, m)
            })(window, document, 'script', 'https://www.google-analytics.com/analytics.js', 'ga');

            ga('create', 'UA-82382944-1', 'auto');
            ga('send', 'pageview');

        </script>
    }
    @Scripts.Render("~/bundles/jquery")
    @Scripts.Render("~/bundles/bootstrap")
    @Scripts.Render("~/bundles/jqueryval")
    @Scripts.Render("~/Scripts/JqueryValidate/jquery.validate.unobtrusive.js")
    <script type="text/javascript">
    $.validator.setDefaults({
        ignore: null
    });
    $.validator.methods.range = function (value, element, param) {
        var globalizedValue = value.replace(",", ".");
        return this.optional(element) || (globalizedValue >= param[0] && globalizedValue <= param[1]);
    }

    $.validator.methods.number = function (value, element) {
        return this.optional(element) || /^-?(?:\d+|\d{1,3}(?:[\s\.,]\d{3})+)(?:[\.,]\d+)?$/.test(value);
    }
    // variabili globali
    var MONETA = '@(Language.Price + " (" + Language.Moneta + ")")';
    </script>
    @Scripts.Render("~/Scripts/Jquery/jquery-ui-1.11.4.min.js")
    @Scripts.Render("~/Scripts/Uploadify/jquery.uploadifive.min.js")
    @Scripts.Render("~/Scripts/loader/jquery.loader.min.js")
    @Scripts.Render("~/Scripts/SlickNav/jquery.slicknav.min.js")
    @Scripts.Render("~/Scripts/Site.js")
    @RenderSection("scripts", required: false)
</body>
</html>
