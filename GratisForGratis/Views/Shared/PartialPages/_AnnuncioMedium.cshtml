@using GratisForGratis.Models
@model AnnuncioViewModel

<div id="@HttpUtility.UrlEncode(Model.Token)" class="col-xs-12 col-md-3 purchase @(((Model.StatoVendita == StatoVendita.SOSPESO && DateTime.Now > Model.DataModifica.Value.AddDays(1)) || (Model.StatoVendita == StatoVendita.ATTIVO && Model.DataFine <= DateTime.Now))?"blocked":"")">
    <h4 class="title plus">
        <a href="@("/baratto/" + GratisForGratis.Models.Utility.UrlEncode(Model.Nome) + "-gratis/" + HttpUtility.UrlEncode(Model.Token))">@Model.Nome</a>
    </h4>
    <div class="preview">
        <div class="cella table">
            <div class="cell">
                <img class="phote" src="@Url.Content("~/Uploads/Images/" + Model.Venditore.VenditoreToken + "/" + Model.Foto[0].DATA_INSERIMENTO.Year + "/" + "Little/" + Model.Foto[0].ALLEGATO.NOME)" alt="@Model.Nome" />
            </div>
        </div>
        <div class="cella noMandatory">
            <a href="@Url.Action(Model.Categoria.ToLower() + "-gratis/" + Model.CategoriaID,"categoria")" title="@Model.Categoria">
                <img class="glyphicon category" src="@Url.Content("~/Images/Icone/category.svg")" alt="@Language.Category" />
                @Model.Categoria
            </a>
        </div>
        <div class="cella points">
            <img class="glyphicon happyCoin" src="@Url.Content("~/Images/Icone/happyCoin.svg")" alt="@Language.Moneta" />
            @Model.Punti
        </div>
        @if (Model.Offerta.TipoScambio == TipoScambio.Spedizione)
        {
            <div class="cella points">
                @Html.Label("SoldiSpedizione", Language.Shipment + ":")
                @Model.Offerta.SoldiSpedizione (@Model.Offerta.NomeCorriere)
            </div>
        }
        <div class="cella noMandatory">
            @Html.Label("TipoPagamento", Language.TypePayment + ":")
            @Model.TipoPagamento
        </div>
        @if (Model.StatoVendita != StatoVendita.BARATTATO && Model.StatoVendita != StatoVendita.VENDUTO)
        {
        <div class="cella">
            @Html.Label("Stato", Language.StateSelling + ":")
            @if ((Model.StatoVendita == StatoVendita.SOSPESO && DateTime.Now > Model.DataModifica.Value.AddDays(1)) || (Model.StatoVendita == StatoVendita.ATTIVO && Model.DataFine <= DateTime.Now))
            {
                <span class="stateText">
                    @Language.InSuspense
                </span>
            }
            else
            {
                <span class="stateText">
                    @EnumHelper.GetSelectList(typeof(StatoVendita), Model.StatoVendita).Where(m => m.Selected).FirstOrDefault().Text
                </span>
            }
        </div>
        }
        else
        {
            <div class="cella noMandatory">
                @Html.Label("DataVendita", "Data vendita:")
                @Model.DataModifica
            </div>
        }
        <div class="cella user">
            @Html.Label("Venditore", Language.Seller + ":")
            <b>
                @Html.ActionLink((string.IsNullOrWhiteSpace(Model.Venditore.Nominativo) ? Model.Venditore.Username : Model.Venditore.Nominativo), Model.Venditore.Username + "/" + Model.Venditore.Id, (Model.Venditore.Tipo == GratisForGratis.Models.TipoVenditore.Attivita) ? "negozio" : "profilo")
            </b>
        </div>
    </div>
    @Html.Partial("PartialPages/_FunzioniAnnuncio", Model)
</div>