@using GratisForGratis.Models
@model AnnuncioViewModel

<div id="@HttpUtility.UrlEncode(Model.Token)" class="col-xs-12 col-md-3 purchase">
    <h4 class="title plus">@Model.Nome</h4>
    <div class="preview">
        <div class="cella table">
            <div class="cell">
                <img class="phote" src="@Url.Content("~/Uploads/Images/" + Model.Venditore.VenditoreToken + "/" + Model.Foto[0].DATA_INSERIMENTO.Year + "/" + "Little/" + Model.Foto[0].ALLEGATO.NOME)" alt="@Model.Nome" />
            </div>
        </div>
        <div class="cella noMandatory">
            <img class="glyphicon category" src="@Url.Content("~/Images/Icone/category.svg")" alt="@Language.Category" />
            @Model.Categoria
        </div>
        <div class="cella points">
            <img class="glyphicon happyCoin" src="@Url.Content("~/Images/Icone/happyCoin.svg")" alt="@Language.Moneta" />
            @Model.Punti
        </div>
        @if (Model.TipoAcquisto == TipoAcquisto.Oggetto)
        {
        OggettoViewModel oggetto = (OggettoViewModel)Model;
        <div class="cella points">
            @Html.Label("TipoScambio", Language.Exchange + ":")
            @foreach (TipoScambio tipo in oggetto.TipoScambio)
            {
            <div>@tipo.ToString()</div>
            }
        </div>
        if (oggetto.TipoScambio.Contains(TipoScambio.Spedizione))
        {
        <div class="cella points">
            @Html.Label("SoldiSpedizione", Language.Shipment + ":")
            @oggetto.SoldiSpedizione (@oggetto.NomeCorriere)
        </div>
        <div class="cella points">
            @if (string.IsNullOrWhiteSpace(@oggetto.LDVFile))
            {
                @ViewModel.AdNothingLDV
            }
            else
            {
                <a href="@oggetto.LDVFile" target="_blank">@oggetto.Nome</a>
            }
        </div>
        }
        }
        @if (Model.Offerta.TipoScambio == TipoScambio.Spedizione)
        {
        <div class="cella points">
            @Html.Label("SoldiSpedizione", Language.Shipment + ":")
            @Model.Offerta.SoldiSpedizione (@Model.Offerta.NomeCorriere)
        </div>
        }
        @if (Model.StatoVendita != StatoVendita.BARATTATO && Model.StatoVendita != StatoVendita.VENDUTO)
        {
        <div class="cella noMandatory">
            @Html.Label("Durata", Language.ExpireDate + ":")
            @Model.DataFine
        </div>
        <div class="cella">
            @Html.Label("Stato", Language.StateSelling + ":")
            <span class="stateText">
                @EnumHelper.GetSelectList(typeof(StatoVendita), Model.StatoVendita).Where(m => m.Selected).FirstOrDefault().Text
            </span>
        </div>
        }
        else
        {
        <div class="cella noMandatory">
            @Html.Label("DataVendita", "Data vendita:")
            @Model.DataModifica
        </div>
        }
        <div class="cella user">
            @Html.Label("Venditore", Language.Seller + ":")
            <b>@Html.ActionLink(Model.Venditore.Nominativo, "Profilo", "Utente", new { token = Model.Venditore.VenditoreToken }, null)</b>
        </div>
    </div>
    @Html.Partial("PartialPages/_FunzioniAnnuncio", Model)
</div>